ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 90
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 100
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 300
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 200
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 300
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 500
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 600
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 550
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 600
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 1000
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 10000
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
#SVR
rf_dataset = read.csv("Position_Salaries.csv")
# spliting the data_set
library(caTools)
set.seed(1234)
to_split = sample.split(rf_dataset$Salary,SplitRatio = 0.9)
training_set = subset(rf_dataset,to_split == TRUE)
test_set = subset(rf_dataset,to_split == FALSE)
training_set = rf_dataset
# training(fitting) the data_set SVR linear
#install.packages('randomForest')
library(randomForest)
rf_regressor = randomForest(formula = Salary ~ Level , #note ' Salary ~ Level ' dosent work, reomve the "'"
data = training_set,
ntree = 100000
)
# prediction
y_pred_test = predict(rf_regressor,newdata = test_set)
print(y_pred_test)
man_in = 6.5
y_pred_man = predict(rf_regressor,data.frame(Level = man_in))
print(y_pred_man)
# visualizing Training set with test set
library(ggplot2)
x_grid = seq(min(training_set$Level), max(training_set$Level), 0.001)
ggplot() +
geom_point(aes( x = training_set$Level, y = training_set$Salary),
colour = "Green")+
geom_point(aes(x = test_set$Level, y = predict(rf_regressor, newdata = test_set)),
colour = "red")+
geom_point(aes(x = man_in, y = y_pred_man),
colour = "magenta")+
geom_line(aes( x = x_grid, y = predict(rf_regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue')+
ggtitle("Salary Prediction ")+
xlab("position")+
ylab("Salary")
# Summary of the simple regression and polynomial regression
print(summary(rf_regressor))
print(y_pred_man)
print(y_pred_test)
plot(rf_regressor)
